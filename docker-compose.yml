# =====================================
# Docker Compose - Local Development
# =====================================

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: b2b_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: b2b_marketplace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecurepassword123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d b2b_marketplace"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - b2b_network

  redis:
    image: redis:7-alpine
    container_name: b2b_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - b2b_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: b2b_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    command: ["dumb-init", "--", "node", "server.js"]
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:mysecurepassword123@postgres:5432/b2b_marketplace
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: mysecurepassword123
      DB_DATABASE: b2b_marketplace
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379
      JWT_SECRET: gDgQwj/ONp0vOLhmsWq/Wm0IHegEBXZwJzrxK7faJICWRPdcmXv5eRY/4LjnSfoTkdqnN9RE+gaFIYhSQ+4V0A==
      JWT_REFRESH_SECRET: DEV_REFRESH_M6n5B4v3C2x1Z9y8A7s6D5f4G3h2J1k0
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      API_PREFIX: /api
      CORS_CREDENTIALS: "true"
      ALLOWED_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      LOG_LEVEL: debug
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - b2b_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # IMPORTANT: Use a relative path for the API URL
      args:
        REACT_APP_API_URL: http://localhost:3001/api
    container_name: b2b_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - b2b_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  b2b_network:
    driver: bridge
    name: b2b_network